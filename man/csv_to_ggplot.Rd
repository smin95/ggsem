% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/csv_to_ggplot.R
\name{csv_to_ggplot}
\alias{csv_to_ggplot}
\title{Convert CSV (from ggsem Shiny app) to ggplot2 output}
\usage{
csv_to_ggplot(
  points_data,
  lines_data,
  annotations_data,
  loops_data,
  element_order = c("annotations", "self_loops", "points", "lines")
)
}
\arguments{
\item{points_data}{The object that stores the CSV file containing information about points from the ggsem Shiny app.}

\item{lines_data}{The object that stores the CSV file containing information about lines from the ggsem Shiny app.}

\item{annotations_data}{The object that stores the CSV file containing information about text annotations from the ggsem Shiny app.}

\item{loops_data}{The object that stores the CSV file containing information about self-loop arrows from the ggsem Shiny app.}

\item{element_order}{Order of the graphical elements on display. The default is set so that annotations are at the most front and lines
at the most back. This can be changed by providing a vector of four elements of strings, such as: c("self_loops", "annotations", "points", "lines")}
}
\value{
Returns a ggplot2 object.
}
\description{
This function converts the four CSV files from the ggsem Shiny app into a ggplot2 output object.
The ggplot2 output can then be modified using standard ggplot2 functions, such as ggtitle() and annotate().
}
\examples{
\dontrun{
points_df <- read_csv('points_sem1.csv') # a CSV output from the Shiny app
lines_df <- read_csv('lines_sem1.csv')  # a CSV output from the Shiny app
texts_df <- read_csv('ann_sem1.csv')  # a CSV output from the Shiny app
loops_df <- read_csv('loop_sem1.csv')  # a CSV output from the Shiny app
create_plot_from_csv(points_df, lines_df, texts_df, loops_df) # Convert CSV to ggplot2 object
}
}
